#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É —Ç–µ—Å—Ç–æ–≤—ã–º –∏ —Ä–µ–∞–ª—å–Ω—ã–º —Ä–µ–∂–∏–º–æ–º —Ç–æ—Ä–≥–æ–≤–ª–∏
"""

import os
import sys
import shutil
from datetime import datetime

def backup_env():
    """–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é .env —Ñ–∞–π–ª–∞"""
    if os.path.exists('.env'):
        timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
        backup_name = f'.env.backup_{timestamp}'
        shutil.copy2('.env', backup_name)
        print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_name}")
        return backup_name
    return None

def switch_to_testnet():
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º"""
    print("üéØ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú...")
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_env()
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å–µ—Ç–∏
    env_content = """# Bybit API (–¢–ï–°–¢–û–í–ê–Ø –°–ï–¢–¨)
BYBIT_API_KEY=your_testnet_api_key_here
BYBIT_API_SECRET=your_testnet_api_secret_here
BYBIT_TESTNET=true

# Google Sheets
GOOGLE_SHEETS_ID=1Vg-Za-flAc7kI77Emh6Rft-8gZT2spIqnzPoFniedZI
GOOGLE_SHEET_NAME=Trades
GOOGLE_CREDENTIALS_FILE=credentials.json

# Telegram Bot
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here
TELEGRAM_CHAT_ID=your_telegram_chat_id_here

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏ (–î–ï–ú–û-–°–ß–ï–¢)
TRADE_MODE=trade
DEFAULT_LEVERAGE=10
DEFAULT_POSITION_SIZE=0.01
MAX_POSITIONS=3
PRICE_DEVIATION=0.5

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
CHECK_INTERVAL=30

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL=INFO
LOG_FILE=./google_signals_bot.log
"""
    
    try:
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        print("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("üí∞ –¢–µ–ø–µ—Ä—å —Ç–æ—Ä–≥–æ–≤–ª—è –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –Ω–∞ –¥–µ–º–æ-—Å—á–µ—Ç–µ")
        print("üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å API –∫–ª—é—á–∏ –≤ .env —Ñ–∞–π–ª–µ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏: {e}")

def switch_to_mainnet():
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –≤ —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º"""
    print("‚ö†Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ –†–ï–ê–õ–¨–ù–´–ô –†–ï–ñ–ò–ú...")
    print("üí∏ –í–ù–ò–ú–ê–ù–ò–ï: –¢–æ—Ä–≥–æ–≤–ª—è –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Å—á–µ—Ç–µ!")
    
    confirm = input("–í—ã —É–≤–µ—Ä–µ–Ω—ã? (yes/no): ").lower()
    if confirm != 'yes':
        print("‚ùå –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_env()
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
    env_content = """# Bybit API (–†–ï–ê–õ–¨–ù–ê–Ø –°–ï–¢–¨)
BYBIT_API_KEY=your_mainnet_api_key_here
BYBIT_API_SECRET=your_mainnet_api_secret_here
BYBIT_TESTNET=false

# Google Sheets
GOOGLE_SHEETS_ID=1Vg-Za-flAc7kI77Emh6Rft-8gZT2spIqnzPoFniedZI
GOOGLE_SHEET_NAME=Trades
GOOGLE_CREDENTIALS_FILE=credentials.json

# Telegram Bot
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here
TELEGRAM_CHAT_ID=your_telegram_chat_id_here

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏ (–†–ï–ê–õ–¨–ù–´–ô –°–ß–ï–¢)
TRADE_MODE=trade
DEFAULT_LEVERAGE=5
DEFAULT_POSITION_SIZE=0.005
MAX_POSITIONS=2
PRICE_DEVIATION=0.3

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
CHECK_INTERVAL=30

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL=INFO
LOG_FILE=./google_signals_bot.log
"""
    
    try:
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        print("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("üí∏ –¢–µ–ø–µ—Ä—å —Ç–æ—Ä–≥–æ–≤–ª—è –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Å—á–µ—Ç–µ")
        print("üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å API –∫–ª—é—á–∏ –≤ .env —Ñ–∞–π–ª–µ")
        print("‚ö†Ô∏è –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–µ–Ω—å–≥–∞–º–∏!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏: {e}")

def show_current_mode():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º"""
    if not os.path.exists('.env'):
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    try:
        with open('.env', 'r', encoding='utf-8') as f:
            content = f.read()
        
        if 'BYBIT_TESTNET=true' in content:
            print("üéØ –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: –¢–ï–°–¢–û–í–ê–Ø –°–ï–¢–¨")
            print("üí∞ –¢–æ—Ä–≥–æ–≤–ª—è –Ω–∞ –¥–µ–º–æ-—Å—á–µ—Ç–µ")
        elif 'BYBIT_TESTNET=false' in content:
            print("‚ö†Ô∏è –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: –†–ï–ê–õ–¨–ù–ê–Ø –°–ï–¢–¨")
            print("üí∏ –¢–æ—Ä–≥–æ–≤–ª—è –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Å—á–µ—Ç–µ")
        else:
            print("‚ùì –†–µ–∂–∏–º –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ .env: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ Google Signals Bot")
    print("=" * 50)
    
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python switch_mode.py testnet  - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º")
        print("  python switch_mode.py mainnet  - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –≤ —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º")
        print("  python switch_mode.py status   - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º")
        return
    
    command = sys.argv[1].lower()
    
    if command == 'testnet':
        switch_to_testnet()
    elif command == 'mainnet':
        switch_to_mainnet()
    elif command == 'status':
        show_current_mode()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")

if __name__ == "__main__":
    main() 